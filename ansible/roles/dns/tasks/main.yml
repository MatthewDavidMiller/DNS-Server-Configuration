---
# Credits

- name: Create unbound path
  ansible.builtin.file:
    path: /var/lib/unbound
    state: directory
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Create Pihole container path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole"
    state: directory
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Create etc-pihole path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-pihole"
    state: directory
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Create etc-lighttpd path
  ansible.builtin.file:
    path: "/home/{{ user_name }}/pihole/etc-lighttpd"
    state: directory
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Docker Compose file
  ansible.builtin.template:
    src: docker-compose.j2
    dest: "/home/{{ user_name }}/pihole/docker-compose.yml"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Unbound configuration
  ansible.builtin.template:
    src: unbound_pihole.j2
    dest: /etc/unbound/unbound.conf.d/pi-hole.conf
    owner: root
    group: root
    mode: "0644"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Start and enable unbound service
  ansible.builtin.systemd:
    name: unbound
    state: restarted
    enabled: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Build container
  ansible.builtin.shell:
    cmd: |
      cd "/home/{{ user_name }}/pihole"
      docker-compose down
      docker-compose up --detach
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Download root hints
  get_url:
    url: https://www.internic.net/domain/named.root
    dest: /var/lib/unbound/root.hints
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Pihole Config
  ansible.builtin.template:
    src: setup_vars.j2
    dest: /home/{{ user_name }}/pihole/etc-pihole/setupVars.conf
    owner: pihole
    group: pihole
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Clear current databases
  ansible.builtin.shell:
    cmd: |
      sqlite3 "/home/{{ user_name }}/pihole/etc-pihole/gravity.db" <<EOF
      DELETE FROM domainlist;
      DELETE FROM adlist
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Setup Allow and Block Lists
  ansible.builtin.shell:
    cmd: |
      sqlite3 "/home/{{ user_name }}/pihole/etc-pihole/gravity.db" <<EOF
      INSERT INTO domainlist (id, type, domain, enabled, comment) VALUES {{ item }}
      EOF
  loop: "{{ allow_block_list }}"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Setup Gravity Lists
  ansible.builtin.shell:
    cmd: |
      sqlite3 "/home/{{ user_name }}/pihole/etc-pihole/gravity.db" <<EOF
      INSERT INTO adlist (id, address, enabled, comment) VALUES {{ item }}
      EOF
  loop: "{{ adlist }}"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Custom Domains
  ansible.builtin.lineinfile:
    path: "/home/{{ user_name }}/pihole/etc-pihole/custom.list"
    line: "{{ item }}"
    create: "yes"
  loop: "{{ domains_list }}"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow dns tcp
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "53"
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow dns tcp ipv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "53"
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow dns udp
  ansible.builtin.iptables:
    chain: INPUT
    protocol: udp
    destination_port: "53"
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow dns udp ipv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: udp
    destination_port: "53"
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow http
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "80"
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow http ipv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "80"
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow https
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "443"
    source: "{{ network_prefix }}"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Allow https ipv6
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "443"
    source: "fe80::/10"
    in_interface: "{{ interface_name }}"
    jump: ACCEPT
    ip_version: ipv6
  become: "yes"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Save Iptables Rules
  community.general.iptables_state:
    ip_version: ipv4
    table: filter
    state: saved
    path: /etc/iptables/rules.v4
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Save Iptables Rules ipv6
  community.general.iptables_state:
    ip_version: ipv6
    table: filter
    state: saved
    path: /etc/iptables/rules.v6
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: External Config
  ansible.builtin.template:
    src: external.j2
    dest: "/home/{{ user_name }}/pihole/etc-lighttpd/external.conf"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Copy pem file
  ansible.builtin.copy:
    src: "/etc/letsencrypt/live/{{ ssl_cert }}/cert_privkey_combined.pem"
    dest: "/home/{{ user_name }}/pihole/etc-lighttpd/cert_privkey_combined.pem"
  when:
    - ansible_facts['os_family'] == 'Debian'
